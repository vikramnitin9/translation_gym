digraph {
"avl_create" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"avl_find" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"avl_successor" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"avl_apply" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"avl_print" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"avl_check_height" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"avl_insert" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"avl_delete" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"rotate_left" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"rotate_right" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"fix_insert_leftimbalance" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"fix_insert_rightimbalance" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"fix_delete_leftimbalance" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"fix_delete_rightimbalance" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"check_order" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"check_height" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"print" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"compare_func" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"destroy_func" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"print_func" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"print_char_func" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"main_0" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"tree_print" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"tree_check" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"permutation_insert" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"permutation_delete" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"" [type=structs, language=source, fillcolor="#FFF2CC", style=filled, shape=box];
"_G_fpos_t" [type=structs, language=source, fillcolor="#FFF2CC", style=filled, shape=box];
"_G_fpos64_t" [type=structs, language=source, fillcolor="#FFF2CC", style=filled, shape=box];
"_IO_FILE" [type=structs, language=source, fillcolor="#FFF2CC", style=filled, shape=box];
"avlnode" [type=structs, language=source, fillcolor="#FFF2CC", style=filled, shape=box];
"tm" [type=structs, language=source, fillcolor="#FFF2CC", style=filled, shape=box];
"timespec" [type=structs, language=source, fillcolor="#FFF2CC", style=filled, shape=box];
"mu_tests" [type=globals, language=source, fillcolor="#FFF2CC", style=filled, shape=diamond];
"mu_fails" [type=globals, language=source, fillcolor="#FFF2CC", style=filled, shape=diamond];
"permutation_error" [type=globals, language=source, fillcolor="#FFF2CC", style=filled, shape=diamond];
"avlbf" [type=enums, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"avltraversal" [type=enums, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"permute_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"PermutationErrorWrapper::new" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"PermutationErrorWrapper::get" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"tree_create_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"MuFailsWrapper::get" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"unit_test_successor_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"unit_test_permutation_deletion_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"run_test" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"avl_destroy_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"unit_test_find_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"process_permutation" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"main_0_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"all_tests_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"swap_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"unit_test_chain_insertion_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"MuFailsWrapper::new" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"unit_test_create_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"tree_find_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"do_permute" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"run_test_i32" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"destroy_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"main" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"unit_test_atomic_deletion_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"unit_test_dup_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"unit_test_chain_deletion_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"unit_test_min_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"MuTestsWrapper::get" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"makedata_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"MuTestsWrapper::set" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"tree_insert_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"tree_find" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"PermutationErrorWrapper::set" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"tree_delete_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"MuFailsWrapper::set" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"unit_test_atomic_insertion_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"unit_test_permutation_insertion_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"MuTestsWrapper::new" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"swap" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"unit_test_random_insertion_deletion_rust" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"PermutationErrorWrapper" [type=structs, language=target, fillcolor="#D5E8D4", style=filled, shape=box];
"_rust" [type=structs, language=target, fillcolor="#D5E8D4", style=filled, shape=box];
"avlnode_rust" [type=structs, language=target, fillcolor="#D5E8D4", style=filled, shape=box];
"MuFailsWrapper" [type=structs, language=target, fillcolor="#D5E8D4", style=filled, shape=box];
"MuTestsWrapper" [type=structs, language=target, fillcolor="#D5E8D4", style=filled, shape=box];
"malloc" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"printf" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"free" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"__assert_fail" [type=functions, language=source, fillcolor="#FFF2CC", style=filled, shape=ellipse];
"stdout" [type=globals, language=target, fillcolor="#D5E8D4", style=filled, shape=diamond];
"Some" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"avltree" [type=structs, language=target, fillcolor="#D5E8D4", style=filled, shape=box];
"_print" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"new_const" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"null_mut" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"new_v1_formatted" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"new" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"new_display" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"Is" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"new_v1" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"into_iter" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"next" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"branch" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"from_residual" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"mydata" [type=structs, language=target, fillcolor="#D5E8D4", style=filled, shape=box];
"exit" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"args" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"from_raw" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"into_raw" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"time" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"rand" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"srand" [type=functions, language=target, fillcolor="#D5E8D4", style=filled, shape=ellipse];
"avl_create" -> "malloc";
"avl_create" -> "";
"avl_find" -> "avlnode";
"avl_successor" -> "avlnode";
"avl_apply" -> "avl_apply";
"avl_apply" -> "avltraversal";
"avl_print" -> "printf";
"avl_print" -> "print";
"avl_print" -> "check_height";
"avl_check_height" -> "check_height";
"avl_insert" -> "malloc";
"avl_insert" -> "fix_insert_leftimbalance";
"avl_insert" -> "fix_insert_rightimbalance";
"avl_insert" -> "avlnode";
"avl_delete" -> "avl_successor";
"avl_delete" -> "fix_delete_rightimbalance";
"avl_delete" -> "fix_delete_leftimbalance";
"avl_delete" -> "free";
"avl_delete" -> "avlnode";
"rotate_left" -> "avlnode";
"rotate_right" -> "avlnode";
"fix_insert_leftimbalance" -> "rotate_right";
"fix_insert_leftimbalance" -> "rotate_left";
"fix_insert_rightimbalance" -> "rotate_left";
"fix_insert_rightimbalance" -> "rotate_right";
"fix_delete_leftimbalance" -> "rotate_right";
"fix_delete_leftimbalance" -> "rotate_left";
"fix_delete_rightimbalance" -> "rotate_left";
"fix_delete_rightimbalance" -> "rotate_right";
"check_height" -> "check_height";
"print" -> "print";
"print" -> "printf";
"compare_func" -> "__assert_fail";
"compare_func" -> "";
"destroy_func" -> "__assert_fail";
"destroy_func" -> "free";
"destroy_func" -> "";
"print_func" -> "__assert_fail";
"print_func" -> "printf";
"print_func" -> "";
"print_char_func" -> "__assert_fail";
"print_char_func" -> "printf";
"print_char_func" -> "";
"main_0" -> "MuTestsWrapper::new";
"main_0" -> "PermutationErrorWrapper::new";
"main_0" -> "main_0_rust";
"main_0" -> "MuFailsWrapper::new";
"main_0" -> "MuFailsWrapper";
"main_0" -> "PermutationErrorWrapper";
"main_0" -> "MuTestsWrapper";
"tree_check" -> "stdout";
"tree_check" -> "";
"tree_check" -> "avltree";
"permutation_insert" -> "permutation_error";
"permutation_insert" -> "stdout";
"permutation_insert" -> "avlnode";
"permutation_insert" -> "";
"permutation_insert" -> "PermutationErrorWrapper";
"permutation_delete" -> "permutation_error";
"permutation_delete" -> "stdout";
"permutation_delete" -> "avlnode";
"permutation_delete" -> "";
"_G_fpos_t" -> "";
"_G_fpos64_t" -> "";
"_IO_FILE" -> "_IO_FILE";
"avlnode" -> "avlnode";
"permute_rust" -> "do_permute";
"PermutationErrorWrapper::new" -> "permutation_error";
"PermutationErrorWrapper::get" -> "permutation_error";
"tree_create_rust" -> "Some";
"tree_create_rust" -> "avl_create";
"tree_create_rust" -> "avltree";
"MuFailsWrapper::get" -> "mu_fails";
"unit_test_successor_rust" -> "tree_insert_rust";
"unit_test_successor_rust" -> "_print";
"unit_test_successor_rust" -> "new_const";
"unit_test_successor_rust" -> "tree_delete_rust";
"unit_test_successor_rust" -> "avl_successor";
"unit_test_successor_rust" -> "avl_destroy_rust";
"unit_test_successor_rust" -> "tree_create_rust";
"unit_test_successor_rust" -> "Some";
"unit_test_successor_rust" -> "null_mut";
"unit_test_successor_rust" -> "avlnode";
"unit_test_permutation_deletion_rust" -> "process_permutation";
"unit_test_permutation_deletion_rust" -> "PermutationErrorWrapper::get";
"unit_test_permutation_deletion_rust" -> "permute_rust";
"unit_test_permutation_deletion_rust" -> "PermutationErrorWrapper::set";
"unit_test_permutation_deletion_rust" -> "PermutationErrorWrapper";
"run_test" -> "MuTestsWrapper::get";
"run_test" -> "MuTestsWrapper::set";
"run_test" -> "_print";
"run_test" -> "MuFailsWrapper::get";
"run_test" -> "MuFailsWrapper::set";
"run_test" -> "new_v1_formatted";
"run_test" -> "new";
"run_test" -> "new_display";
"run_test" -> "new_const";
"run_test" -> "Is";
"run_test" -> "MuTestsWrapper";
"run_test" -> "MuFailsWrapper";
"avl_destroy_rust" -> "destroy_rust";
"avl_destroy_rust" -> "avltree";
"unit_test_find_rust" -> "avl_destroy_rust";
"unit_test_find_rust" -> "avl_find";
"unit_test_find_rust" -> "tree_insert_rust";
"unit_test_find_rust" -> "_print";
"unit_test_find_rust" -> "tree_create_rust";
"unit_test_find_rust" -> "new_const";
"unit_test_find_rust" -> "avltree";
"unit_test_find_rust" -> "avlnode";
"process_permutation" -> "PermutationErrorWrapper";
"main_0_rust" -> "new_display";
"main_0_rust" -> "_print";
"main_0_rust" -> "MuFailsWrapper::get";
"main_0_rust" -> "all_tests_rust";
"main_0_rust" -> "new_const";
"main_0_rust" -> "new_v1";
"main_0_rust" -> "MuTestsWrapper::get";
"main_0_rust" -> "MuTestsWrapper";
"main_0_rust" -> "MuFailsWrapper";
"main_0_rust" -> "PermutationErrorWrapper";
"all_tests_rust" -> "run_test";
"all_tests_rust" -> "unit_test_atomic_deletion_rust";
"all_tests_rust" -> "unit_test_chain_insertion_rust";
"all_tests_rust" -> "run_test_i32";
"all_tests_rust" -> "unit_test_successor_rust";
"all_tests_rust" -> "unit_test_find_rust";
"all_tests_rust" -> "unit_test_permutation_insertion_rust";
"all_tests_rust" -> "unit_test_min_rust";
"all_tests_rust" -> "unit_test_dup_rust";
"all_tests_rust" -> "unit_test_permutation_deletion_rust";
"all_tests_rust" -> "unit_test_chain_deletion_rust";
"all_tests_rust" -> "unit_test_atomic_insertion_rust";
"all_tests_rust" -> "unit_test_create_rust";
"all_tests_rust" -> "unit_test_random_insertion_deletion_rust";
"all_tests_rust" -> "PermutationErrorWrapper";
"all_tests_rust" -> "MuFailsWrapper";
"all_tests_rust" -> "MuTestsWrapper";
"swap_rust" -> "swap";
"unit_test_chain_insertion_rust" -> "_print";
"unit_test_chain_insertion_rust" -> "tree_create_rust";
"unit_test_chain_insertion_rust" -> "into_iter";
"unit_test_chain_insertion_rust" -> "new_display";
"unit_test_chain_insertion_rust" -> "avl_destroy_rust";
"unit_test_chain_insertion_rust" -> "next";
"unit_test_chain_insertion_rust" -> "tree_insert_rust";
"unit_test_chain_insertion_rust" -> "new_v1";
"MuFailsWrapper::new" -> "mu_fails";
"unit_test_create_rust" -> "tree_create_rust";
"unit_test_create_rust" -> "new_const";
"unit_test_create_rust" -> "_print";
"unit_test_create_rust" -> "Some";
"unit_test_create_rust" -> "avl_destroy_rust";
"tree_find_rust" -> "avl_find";
"tree_find_rust" -> "Some";
"tree_find_rust" -> "branch";
"tree_find_rust" -> "from_residual";
"tree_find_rust" -> "avltree";
"tree_find_rust" -> "mydata";
"tree_find_rust" -> "avlnode";
"do_permute" -> "do_permute";
"do_permute" -> "into_iter";
"do_permute" -> "next";
"do_permute" -> "new";
"run_test_i32" -> "new_const";
"run_test_i32" -> "new";
"run_test_i32" -> "_print";
"run_test_i32" -> "MuTestsWrapper::set";
"run_test_i32" -> "new_display";
"run_test_i32" -> "MuTestsWrapper::get";
"run_test_i32" -> "MuFailsWrapper::get";
"run_test_i32" -> "new_v1_formatted";
"run_test_i32" -> "Is";
"run_test_i32" -> "MuFailsWrapper::set";
"run_test_i32" -> "MuTestsWrapper";
"run_test_i32" -> "MuFailsWrapper";
"destroy_rust" -> "destroy_rust";
"destroy_rust" -> "free";
"destroy_rust" -> "avltree";
"destroy_rust" -> "avlnode";
"main" -> "exit";
"main" -> "null_mut";
"main" -> "into_iter";
"main" -> "next";
"main" -> "args";
"main" -> "new";
"main" -> "main_0";
"unit_test_atomic_deletion_rust" -> "next";
"unit_test_atomic_deletion_rust" -> "tree_create_rust";
"unit_test_atomic_deletion_rust" -> "new_display";
"unit_test_atomic_deletion_rust" -> "into_iter";
"unit_test_atomic_deletion_rust" -> "new_v1";
"unit_test_atomic_deletion_rust" -> "tree_check";
"unit_test_atomic_deletion_rust" -> "tree_insert_rust";
"unit_test_atomic_deletion_rust" -> "_print";
"unit_test_atomic_deletion_rust" -> "avl_destroy_rust";
"unit_test_atomic_deletion_rust" -> "tree_delete_rust";
"unit_test_atomic_deletion_rust" -> "Some";
"unit_test_dup_rust" -> "stdout";
"unit_test_dup_rust" -> "tree_create_rust";
"unit_test_dup_rust" -> "avl_destroy_rust";
"unit_test_dup_rust" -> "new_const";
"unit_test_dup_rust" -> "tree_insert_rust";
"unit_test_chain_deletion_rust" -> "into_iter";
"unit_test_chain_deletion_rust" -> "next";
"unit_test_chain_deletion_rust" -> "avl_destroy_rust";
"unit_test_chain_deletion_rust" -> "new_v1";
"unit_test_chain_deletion_rust" -> "new_display";
"unit_test_chain_deletion_rust" -> "Some";
"unit_test_chain_deletion_rust" -> "_print";
"unit_test_chain_deletion_rust" -> "tree_delete_rust";
"unit_test_chain_deletion_rust" -> "tree_insert_rust";
"unit_test_chain_deletion_rust" -> "tree_create_rust";
"unit_test_min_rust" -> "new_const";
"unit_test_min_rust" -> "tree_delete_rust";
"unit_test_min_rust" -> "Some";
"unit_test_min_rust" -> "_print";
"unit_test_min_rust" -> "from_raw";
"unit_test_min_rust" -> "tree_insert_rust";
"unit_test_min_rust" -> "tree_find_rust";
"unit_test_min_rust" -> "tree_create_rust";
"unit_test_min_rust" -> "null_mut";
"unit_test_min_rust" -> "avl_destroy_rust";
"MuTestsWrapper::get" -> "mu_tests";
"makedata_rust" -> "Some";
"makedata_rust" -> "new";
"makedata_rust" -> "_rust";
"MuTestsWrapper::set" -> "mu_tests";
"tree_insert_rust" -> "free";
"tree_insert_rust" -> "_print";
"tree_insert_rust" -> "new_v1";
"tree_insert_rust" -> "new_display";
"tree_insert_rust" -> "makedata_rust";
"tree_insert_rust" -> "into_raw";
"tree_insert_rust" -> "new";
"tree_insert_rust" -> "avl_insert";
"tree_insert_rust" -> "avltree";
"tree_insert_rust" -> "avlnode_rust";
"tree_find" -> "tree_find_rust";
"tree_find" -> "Some";
"tree_find" -> "null_mut";
"tree_find" -> "avltree";
"tree_find" -> "avlnode";
"PermutationErrorWrapper::set" -> "permutation_error";
"tree_delete_rust" -> "new_v1";
"tree_delete_rust" -> "new_const";
"tree_delete_rust" -> "new_display";
"tree_delete_rust" -> "_print";
"tree_delete_rust" -> "tree_find";
"tree_delete_rust" -> "avl_delete";
"tree_delete_rust" -> "avltree";
"MuFailsWrapper::set" -> "mu_fails";
"unit_test_atomic_insertion_rust" -> "new_display";
"unit_test_atomic_insertion_rust" -> "next";
"unit_test_atomic_insertion_rust" -> "into_iter";
"unit_test_atomic_insertion_rust" -> "tree_create_rust";
"unit_test_atomic_insertion_rust" -> "tree_insert_rust";
"unit_test_atomic_insertion_rust" -> "_print";
"unit_test_atomic_insertion_rust" -> "avl_destroy_rust";
"unit_test_atomic_insertion_rust" -> "new_v1";
"unit_test_permutation_insertion_rust" -> "PermutationErrorWrapper::set";
"unit_test_permutation_insertion_rust" -> "permute_rust";
"unit_test_permutation_insertion_rust" -> "permutation_insert";
"unit_test_permutation_insertion_rust" -> "PermutationErrorWrapper::get";
"unit_test_permutation_insertion_rust" -> "PermutationErrorWrapper";
"MuTestsWrapper::new" -> "mu_tests";
"swap" -> "swap_rust";
"unit_test_random_insertion_deletion_rust" -> "new_display";
"unit_test_random_insertion_deletion_rust" -> "tree_find_rust";
"unit_test_random_insertion_deletion_rust" -> "tree_insert_rust";
"unit_test_random_insertion_deletion_rust" -> "new_v1";
"unit_test_random_insertion_deletion_rust" -> "null_mut";
"unit_test_random_insertion_deletion_rust" -> "time";
"unit_test_random_insertion_deletion_rust" -> "next";
"unit_test_random_insertion_deletion_rust" -> "tree_delete_rust";
"unit_test_random_insertion_deletion_rust" -> "new";
"unit_test_random_insertion_deletion_rust" -> "Some";
"unit_test_random_insertion_deletion_rust" -> "avl_destroy_rust";
"unit_test_random_insertion_deletion_rust" -> "into_iter";
"unit_test_random_insertion_deletion_rust" -> "_print";
"unit_test_random_insertion_deletion_rust" -> "new_const";
"unit_test_random_insertion_deletion_rust" -> "rand";
"unit_test_random_insertion_deletion_rust" -> "tree_create_rust";
"unit_test_random_insertion_deletion_rust" -> "srand";
}
